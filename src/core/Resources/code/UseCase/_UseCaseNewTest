<?php
#parse("PHP File Header.php")

declare(strict_types=1);

#if (${NAMESPACE})
namespace ${NAMESPACE};
#end

use BaksDev\Core\Doctrine\DBALQueryBuilder;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
use Symfony\Component\DependencyInjection\Attribute\When;

#set( $groupName = $NAME.replaceAll("([a-z])([A-Z]+)", "$1-$2").toLowerCase() )
#set( $Class = $NAME.replace("Event", "") )

/**
 * @group ${groupName}
 */
#[When(env: 'test')]
class ${NAME} extends KernelTestCase
{
    public static function setUpBeforeClass(): void
    {
        /** @var EntityManagerInterface ${DS}em */
        ${DS}em = self::getContainer()->get(EntityManagerInterface::class);

        ${DS}main = ${DS}em->getRepository(${CONTEXT}::class)
            ->findOneBy(['id' => ${CONTEXT}Uid::TEST]);

        if(${DS}main)
        {
            ${DS}em->remove(${DS}main);
        }


        ${DS}event = ${DS}em->getRepository(${CONTEXT}Event::class)
            ->findBy(['main' => ${CONTEXT}Uid::TEST]);

        foreach(${DS}event as ${DS}remove)
        {
            ${DS}em->remove(${DS}remove);
        }

        ${DS}em->flush();
        ${DS}em->clear();
    }


    public function testUseCase(): void
    {
        /** @see ${CONTEXT}DTO */
        ${DS}${CONTEXT}DTO = new ${CONTEXT}DTO();

        /** @var ${CONTEXT}Handler ${DS}${CONTEXT}Handler */
        ${DS}${CONTEXT}Handler = self::getContainer()->get(${CONTEXT}Handler::class);
        ${DS}handle = ${DS}${CONTEXT}Handler->handle(${DS}${CONTEXT}DTO);

        self::assertTrue((${DS}handle instanceof ${CONTEXT}), ${DS}handle.': Ошибка ${CONTEXT}');

    }


    public function testComplete(): void
    {
        /** @var DBALQueryBuilder ${DS}dbal */
        ${DS}dbal = self::getContainer()->get(DBALQueryBuilder::class);

        ${DS}dbal->createQueryBuilder(self::class);

        ${DS}dbal->from(${CONTEXT}::class)
            ->where('id = :id')
            ->setParameter('id', ${CONTEXT}Uid::TEST);

        self::assertTrue(${DS}dbal->fetchExist());
    }
}